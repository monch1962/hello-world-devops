# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

pool:
  vmImage: 'Ubuntu 16.04'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '8.x'
  displayName: 'Install Node.js'

- script: |
    npm install
    #npm run build
    #npm run test
  displayName: 'npm install and build'
  
- script: |
    SONARCLOUDDIR=/tmp
    wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.2.0.1227-linux.zip -O $SONARCLOUDDIR/sonar.zip
    unzip $SONARCLOUDDIR/sonar.zip -d /tmp
    ls -al $SONARCLOUDDIR
    cat $SONARCLOUDDIR/sonar-scanner-3.2.0.1227-linux/conf/sonar-scanner.properties
    #echo sonar.host.url=http://localhost:8080 > $SONARCLOUDDIR/sonar-scanner-3.2.0.1227-linux/conf/sonar-scanner.properties
    #cat $SONARCLOUDDIR/sonar-scanner-3.2.0.1227-linux/conf/sonar-scanner.properties
    PATH=$SONARCLOUDDIR/sonar-scanner-3.2.0.1227-linux/bin:$PATH
    echo $PATH
    sonar-scanner -h
    #cat $SONARCLOUDDIR/sonar-scanner-3.2.0.1227-linux/sonar-project.properties
    #sonar-scanner
    sonar-scanner \
    -Dsonar.projectKey=monch1962_hello-world-devops \
    -Dsonar.organization=monch1962-github \
    -Dsonar.sources=. \
    -Dsonar.host.url=https://sonarcloud.io \
    -Dsonar.login=8725538bd2603c6990da57d9c53afe2d176fb844
  displayName: 'Run sonarcloud code quality tests'
    
- script: |
    npm run unittests
  displayName: 'Run unit tests'

- script: |
    #npm install -g testcafe
    node helloworld.js &
    APP_PID=$!
    #npm run uitests
    testcafe headless test/ui/helloworld.ts
    kill $APP_PID
  displayName: 'Run UI tests'

- script: |
    node helloworld.js &
    APP_PID=$!
    wget https://www.dropbox.com/s/sthv0p77c5gip2g/wilee?dl=0 -O wilee
    chmod +x wilee
    ls -l wilee
    APP=http://localhost:8080 TESTCASES=test/api/*.wilee.json ./wilee
    if [ $? -ne 0 ]; then kill $APP_PID && exit 1; fi
    kill $APP_PID
    TESTRESULTS=$(cat test/api/*.result.json)
    echo $TESTRESULTS | jq '.'
    echo $TESTRESULTS | jq 'del(.request, .expect, .actual)'
    FAILED_TESTS=$(echo $TESTRESULTS | jq '.pass_fail' | grep fail | wc -l)
    if [ $FAILED_TESTS -gt 0 ]; then echo $FAILED_TESTS "API tests failed" && exit 1; fi
  displayName: 'Run wilee API tests'

- script: |
    node helloworld.js &
    APP_PID=$!
    npm install -g artillery
    artillery -V
    artillery run test/performance/performance.yml
    kill $APP_PID
  displayName: 'Run Artillery performance test'
